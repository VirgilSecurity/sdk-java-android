/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.virgilsecurity.crypto;

public class VirgilCMSContent extends VirgilAsn1Compatible implements java.lang.AutoCloseable {
  private transient long swigCPtr;

  protected VirgilCMSContent(long cPtr, boolean cMemoryOwn) {
    super(virgil_crypto_javaJNI.VirgilCMSContent_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(VirgilCMSContent obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        virgil_crypto_javaJNI.delete_VirgilCMSContent(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  @Override
  public void close() {
    delete();
  }

  public void setContentType(VirgilCMSContent.Type value) {
    virgil_crypto_javaJNI.VirgilCMSContent_contentType_set(swigCPtr, this, value.swigValue());
  }

  public VirgilCMSContent.Type getContentType() {
    return VirgilCMSContent.Type.swigToEnum(virgil_crypto_javaJNI.VirgilCMSContent_contentType_get(swigCPtr, this));
  }

  public void setContent(byte[] value) {
    virgil_crypto_javaJNI.VirgilCMSContent_content_set(swigCPtr, this, value);
  }

  public byte[] getContent() {
    return virgil_crypto_javaJNI.VirgilCMSContent_content_get(swigCPtr, this);
  }

  public VirgilCMSContent() {
    this(virgil_crypto_javaJNI.new_VirgilCMSContent__SWIG_0(), true);
  }

  public VirgilCMSContent(VirgilCMSContent other) {
    this(virgil_crypto_javaJNI.new_VirgilCMSContent__SWIG_1(VirgilCMSContent.getCPtr(other), other), true);
  }

  public final static class Type {
    public final static VirgilCMSContent.Type Data = new VirgilCMSContent.Type("Data", virgil_crypto_javaJNI.VirgilCMSContent_Type_Data_get());
    public final static VirgilCMSContent.Type SignedData = new VirgilCMSContent.Type("SignedData");
    public final static VirgilCMSContent.Type EnvelopedData = new VirgilCMSContent.Type("EnvelopedData");
    public final static VirgilCMSContent.Type DigestedData = new VirgilCMSContent.Type("DigestedData");
    public final static VirgilCMSContent.Type EncryptedData = new VirgilCMSContent.Type("EncryptedData");
    public final static VirgilCMSContent.Type AuthenticatedData = new VirgilCMSContent.Type("AuthenticatedData");
    public final static VirgilCMSContent.Type SignedAndEnvelopedData = new VirgilCMSContent.Type("SignedAndEnvelopedData");
    public final static VirgilCMSContent.Type DataWithAttributes = new VirgilCMSContent.Type("DataWithAttributes");
    public final static VirgilCMSContent.Type EncryptedPrivateKeyInfo = new VirgilCMSContent.Type("EncryptedPrivateKeyInfo");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Type swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Type.class + " with value " + swigValue);
    }

    private Type(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Type(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Type(String swigName, Type swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Type[] swigValues = { Data, SignedData, EnvelopedData, DigestedData, EncryptedData, AuthenticatedData, SignedAndEnvelopedData, DataWithAttributes, EncryptedPrivateKeyInfo };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
